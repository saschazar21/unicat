$colors: (
  default: (
    color: var(--color-default, 43, 48, 58),
    contrast: var(--color-default-contrast, 199, 213, 159),
    name: 'Gunmetal',
  ),
  light: (
    color: var(--color-light, 199, 213, 159),
    contrast: var(--color-light-contrast, 13, 92, 99),
    name: 'Medium Spring Bud',
  ),
  primary: (
    color: var(--color-primary, 13, 59, 102),
    contrast: var(--color-primary-contrast, 255, 255, 250),
    name: 'Dark Midnight Blue',
  ),
  warning: (
    color: var(--color-warning, 244, 211, 94),
    contrast: var(--color-warning-contrast, 43, 48, 58),
    name: 'Stil de Grain Yellow',
  ),
  success: (
    color: var(--color-success, 13, 92, 99),
    contrast: var(--color-success-contrast, 146, 220, 229),
    name: 'Deep Green-Cyan Turquoise',
  ),
);

$systemColors: (
  default: (
    color: var(--color-system-default, 43, 48, 58),
    contrast: var(--color-system-default-contrast, 255, 255, 250),
    name: 'Gunmetal',
  ),
  grey: (
    color: var(--color-system-grey, 124, 124, 124),
    contrast: var(--color-system-grey-contrast, 0, 0, 0),
    name: 'Trolley Grey',
  ),
  white: (
    color: var(--color-system-white, 255, 255, 250),
    contrast: var(--color-system-white-contrast, 13, 92, 99),
    name: 'Baby Powder',
  ),
);

@function color($mode, $contrast: false, $palette: $colors, $raw: false) {
  @if map-has-key($palette, $mode) {
    @if not $contrast {
      $c: map-get(map-get($palette, $mode), color);
      @if not $raw {
        @return RGB($c);
      }
      @return $c;
    }
    $c: map-get(map-get($palette, $mode), contrast);
    @if not $raw {
      @return RGB($c);
    }
    @return $c;
  }
  @error "The color key #{$mode} is not defined!";
}
